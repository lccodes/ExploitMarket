package edu.brown.game;

import java.util.HashSet;
import java.util.Optional;
import java.util.Set;

import edu.brown.assets.Exploit;

public class Account {
	private double money;
	private Set<Exploit> exploits;
	
	public Account() {
		money = 0;
		exploits = new HashSet<Exploit>();
	}
	
	public void pay(double amt) {
		money += amt;
	}
	
	public void withdraw(double amt) {
		money -= amt;
	}
	
	public boolean hasExploit(Exploit e) {
		return exploits.contains(e);
	}
	
	public void addExploit(Exploit e) {
		exploits.add(e);
	}
	
	public void removeExploit(Exploit e) {
		exploits.remove(e);
	}
	
	public double getBalance() {
		return money;
	}
	
	public ImmutableAccount immutable() {
		return ImmutableAccount.of(this.money, this.exploits);
	}
	
	public Optional<Exploit> getExploit(Optional<String> name, Optional<Long> firmagent) {
		Optional<Exploit> exploit = Optional.empty();
		for (Exploit e : exploits) {
			if (name.isPresent()) {
				if (firmagent.isPresent()) {
					if (firmagent.get().equals(e.FIRMAGENT) && name.get().equals(e.NAME)) {
						return Optional.of(e);
					}
				} else if (name.get().equals(e.NAME)) {
					return Optional.of(e);
				}
			} else if (firmagent.isPresent() && firmagent.get().equals(e.FIRMAGENT)) {
				return Optional.of(e);
			}
		}
		
		return exploit;
	}

}
